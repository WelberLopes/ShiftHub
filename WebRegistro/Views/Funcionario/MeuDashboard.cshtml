@model WebRegistro.ViewModels.DashboardViewModel
@{
    ViewData["Title"] = "Meu Dashboard";
    Layout = "_Layout";
}

<!-- Adicionando referência para a biblioteca de gráficos Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<style>
    .kpi-card {
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }

        .kpi-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
        }

    .icon-circle {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }
</style>

<div class="container-fluid py-4">
    <!-- Cabeçalho de Boas-Vindas -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex align-items-center">
                <img src="https://via.placeholder.com/80" alt="" class="rounded-circle me-3">
                <div>
                    <h3 class="mb-0">Bem-vindo(a) de volta, @Model.Funcionario.NomeCompleto.Split(' ')[0]!</h3>
                    <p class="text-muted mb-0">Aqui está um resumo do seu desempenho este mês.</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Cards de KPIs (Indicadores) -->
    <div class="row g-4 mb-4">
        <div class="col-xl-3 col-md-6">
            <div class="card kpi-card border-0 shadow-sm h-100">
                <div class="card-body d-flex align-items-center">
                    <div class="icon-circle bg-primary-subtle text-primary me-3">
                        <i class="bi bi-calendar-check-fill fs-3"></i>
                    </div>
                    <div>
                        <h6 class="card-subtitle mb-1 text-muted">Dias Trabalhados</h6>
                        <h2 class="card-title fw-bold mb-0">@Model.DiasTrabalhados</h2>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card kpi-card border-0 shadow-sm h-100">
                <div class="card-body d-flex align-items-center">
                    <div class="icon-circle bg-warning-subtle text-warning me-3">
                        <i class="bi bi-calendar-x-fill fs-3"></i>
                    </div>
                    <div>
                        <h6 class="card-subtitle mb-1 text-muted">Faltas Justificadas</h6>
                        <h2 class="card-title fw-bold mb-0">@Model.FaltasJustificadas</h2>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card kpi-card border-0 shadow-sm h-100">
                <div class="card-body d-flex align-items-center">
                    <div class="icon-circle bg-success-subtle text-success me-3">
                        <i class="bi bi-clock-fill fs-3"></i>
                    </div>
                    <div>
                        <h6 class="card-subtitle mb-1 text-muted">Total de Horas</h6>
                        <h2 class="card-title fw-bold mb-0">@Model.TotalHorasTrabalhadas</h2>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card kpi-card border-0 shadow-sm h-100">
                <div class="card-body d-flex align-items-center">
                    <div class="icon-circle bg-info-subtle text-info me-3">
                        <i class="bi bi-graph-up-arrow fs-3"></i>
                    </div>
                    <div>
                        <h6 class="card-subtitle mb-1 text-muted">Média Diária</h6>
                        <h2 class="card-title fw-bold mb-0">
                            @{
                                // Lógica para calcular a média, agora mais segura
                                var parts = Model.TotalHorasTrabalhadas.Split(':');
                                double.TryParse(parts[0], System.Globalization.NumberStyles.Any, System.Globalization.CultureInfo.InvariantCulture, out double hours);
                                double.TryParse(parts[1], System.Globalization.NumberStyles.Any, System.Globalization.CultureInfo.InvariantCulture, out double minutes);
                                var totalHorasDecimal = hours + (minutes / 60.0);
                                var media = Model.DiasTrabalhados > 0 ? totalHorasDecimal / Model.DiasTrabalhados : 0;
                            }
                            @media.ToString("F1", System.Globalization.CultureInfo.InvariantCulture)h
                        </h2>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Gráfico de Horas e Ações Rápidas -->
    <div class="row g-4">
        <div class="col-lg-8">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-white border-0 py-3">
                    <h5 class="mb-0">Horas Trabalhadas por Dia - @DateTime.Now.ToString("MMMM")</h5>
                </div>
                <div class="card-body">
                    <canvas id="horasChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-white border-0 py-3">
                    <h5 class="mb-0">Ações Rápidas</h5>
                </div>
                <div class="card-body d-flex flex-column">
                    <p class="text-muted">Acesse rapidamente as principais áreas do seu perfil.</p>
                    <div class="list-group list-group-flush">
                        <a asp-action="MeuEspelhoDePonto" asp-route-cpf="@Model.Funcionario.Cpf" class="list-group-item list-group-item-action d-flex align-items-center">
                            <i class="bi bi-file-earmark-text-fill fs-4 me-3 text-primary"></i>
                            Ver Espelho de Ponto
                        </a>
                        <a asp-action="MinhaConta" class="list-group-item list-group-item-action d-flex align-items-center">
                            <i class="bi bi-person-circle fs-4 me-3 text-success"></i>
                            Meu Perfil
                        </a>
                        <a asp-controller="Ponto" asp-action="Index" class="list-group-item list-group-item-action d-flex align-items-center">
                            <i class="bi bi-fingerprint fs-4 me-3 text-info"></i>
                            Bater Ponto
                        </a>
                        <a href="#" class="list-group-item list-group-item-action d-flex align-items-center" data-bs-toggle="modal" data-bs-target="#solicitarFolgaModal">
                            <i class="bi bi-calendar-plus-fill fs-4 me-3 text-warning"></i>
                            Solicitar Folga/Atestado
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const ctx = document.getElementById('horasChart').getContext('2d');
            new Chart(ctx, {
                type: 'bar', // Tipo de gráfico: 'bar', 'line', 'pie', etc.
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.LabelsGraficoHoras)),
                    datasets: [{
                        label: 'Horas Trabalhadas',
                        // CORREÇÃO: Serializa os dados de forma segura para JavaScript, evitando problemas com separador decimal (vírgula vs. ponto)
                        data: [@Html.Raw(string.Join(",", Model.DadosGraficoHoras.Select(d => d.ToString(System.Globalization.CultureInfo.InvariantCulture))))],
                        backgroundColor: 'rgba(54, 162, 235, 0.6)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1,
                        borderRadius: 5
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Horas'
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    let label = context.dataset.label || '';
                                    if (label) {
                                        label += ': ';
                                    }
                                    if (context.parsed.y !== null) {
                                        label += context.parsed.y.toFixed(2) + ' horas';
                                    }
                                    return label;
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>
}