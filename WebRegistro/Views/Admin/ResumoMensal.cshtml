@model WebRegistro.ViewModels.ResumoMensalRhViewModel
@{
    ViewData["Title"] = "Resumo Mensal do Funcionário";
    Layout = "_Layout";

    string FormatTimeSpan(TimeSpan ts)
    {
        return ts.TotalHours < 0 ? $"-{(int)ts.Negate().TotalHours:D2}:{ts.Negate().Minutes:D2}" : $"{(int)ts.TotalHours:D2}:{ts.Minutes:D2}";
    }
}

<div class="container-fluid px-4 py-4">
    <div class="mb-4">
        <h2 class="h5 text-muted">@Model.Funcionario.NomeCompleto</h2>
    </div>

    <div class="row g-3 mb-4">
        <div class="col-xl col-md-4 col-sm-6">
            <div class="card shadow-sm border-2 border-start border-primary-subtle h-100">
                <div class="card-body">
                    <div class="text-muted text-uppercase small">Horas Trabalhadas</div>
                    <div class="fs-4 fw-bold">@FormatTimeSpan(Model.TotalHorasTrabalhadas)</div>
                </div>
            </div>
        </div>
        <div class="col-xl col-md-4 col-sm-6">
            <div class="card shadow-sm border-2 border-start border-success-subtle h-100">
                <div class="card-body">
                    <div class="text-muted text-uppercase small">Horas Extras</div>
                    <div class="fs-4 fw-bold text-success-emphasis">@FormatTimeSpan(Model.TotalHorasExtra)</div>
                </div>
            </div>
        </div>
        <div class="col-xl col-md-4 col-sm-6">
            <div class="card shadow-sm border-2 border-start border-info-subtle h-100">
                <div class="card-body">
                    <div class="text-muted text-uppercase small">Dias Trabalhados</div>
                    <div class="fs-4 fw-bold">@Model.DiasTrabalhados</div>
                </div>
            </div>
        </div>
        <div class="col-xl col-md-6 col-sm-6">
            <div class="card shadow-sm border-2 border-start border-danger-subtle h-100">
                <div class="card-body">
                    <div class="text-muted text-uppercase small">Faltas</div>
                    <div class="fs-4 fw-bold text-danger-emphasis">@Model.TotalFaltas</div>
                </div>
            </div>
        </div>
        <div class="col-xl col-md-6 col-sm-6">
            <div class="card shadow-sm border-2 border-start border-warning-subtle h-100">
                <div class="card-body">
                    <div class="text-muted text-uppercase small">Atrasos</div>
                    <div class="fs-4 fw-bold text-warning-emphasis">@Model.TotalAtrasos</div>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow-sm mb-4">
        <div class="card-body d-flex justify-content-between align-items-center">
            <form asp-action="ResumoMensal" method="post" class="d-flex align-items-end">
                @Html.AntiForgeryToken()
                <input type="hidden" name="cpf" value="@Model.Funcionario.Cpf" />
                <div class="me-2">
                    <label for="competencia" class="form-label mb-0"><strong>Filtrar Competência</strong></label>
                    <input type="month" id="competencia" name="competencia" class="form-control" value="@Model.Competencia.ToString("yyyy-MM")">
                </div>
                <div>
                    <button type="submit" class="btn btn-primary">Gerar Resumo</button>
                </div>
            </form>
            <Form asp-controller="Admin" asp-action="Relatorio" asp-route-data="@DateTime.Now.ToString("yyyy-MM-dd")" class="d-inline">
                <input type="hidden" name="cpf" value="@Model.Funcionario.Cpf" />
                <button type="submit">
                    <i class="bi bi-file-text me-2"></i>Relatório de Ponto
                </button>
            </Form>
            <a asp-action="Index" class="btn btn-outline-secondary">Voltar ao Painel</a>
        </div>
    </div>

    <div class="accordion" id="detalhesMensaisAccordion">
        @foreach (var detalheDia in Model.DetalhesDiarios)
        {
            var statusClass = detalheDia.Status switch
            {
                "Trabalhado" => "success",
                "Falta" => "danger",
                "Falta Justificada" => "info",
                "Fim de Semana" => "secondary",
                "Férias" => "dark",
                _ => "light"
            };

            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@detalheDia.Dia.Day">
                        <div class="d-flex w-100 justify-content-between align-items-center pe-3">
                            <span>
                                <strong class="me-2">@detalheDia.Dia.ToString("dd/MM")</strong>
                                <span class="text-muted">@detalheDia.Dia.ToString("dddd")</span>
                            </span>
                            <span>
                                <span class="badge text-bg-@statusClass">@detalheDia.Status</span>
                                @if (detalheDia.TempoAtraso > TimeSpan.Zero)
                                {
                                    <span class="badge text-bg-warning">Atraso</span>
                                }
                                @if (detalheDia.HorasExtra > TimeSpan.Zero)
                                {
                                    <span class="badge text-bg-primary">Hora Extra</span>
                                }
                            </span>
                        </div>
                    </button>
                </h2>
                <div id="collapse-@detalheDia.Dia.Day" class="accordion-collapse collapse" data-bs-parent="#detalhesMensaisAccordion">
                    <div class="accordion-body">
                        @if (detalheDia.Status == "Trabalhado")
                        {
                            <ul class="list-group list-group-horizontal-lg">
                                <li class="list-group-item flex-fill"><strong>Entrada:</strong> @(detalheDia.RegistrosDoDia.FirstOrDefault(r => r.Tipo == "Entrada")?.Horario.ToString("HH:mm") ?? "--:--")</li>
                                <li class="list-group-item flex-fill"><strong>Saída Almoço:</strong> @(detalheDia.RegistrosDoDia.FirstOrDefault(r => r.Tipo == "Saída Almoço")?.Horario.ToString("HH:mm") ?? "--:--")</li>
                                <li class="list-group-item flex-fill"><strong>Volta Almoço:</strong> @(detalheDia.RegistrosDoDia.FirstOrDefault(r => r.Tipo == "Volta Almoço")?.Horario.ToString("HH:mm") ?? "--:--")</li>
                                <li class="list-group-item flex-fill"><strong>Saída:</strong> @(detalheDia.RegistrosDoDia.LastOrDefault(r => r.Tipo == "Saída")?.Horario.ToString("HH:mm") ?? "--:--")</li>
                            </ul>
                            <hr class="my-2" />
                            <p><strong>Total de Horas no Dia:</strong> @FormatTimeSpan(detalheDia.HorasTrabalhadas)</p>
                            @if (detalheDia.TempoAtraso > TimeSpan.Zero)
                            {
                                <p class="text-warning-emphasis mb-1"><strong>Atraso:</strong> @FormatTimeSpan(detalheDia.TempoAtraso)</p>
                            }
                            @if (detalheDia.HorasExtra > TimeSpan.Zero)
                            {
                                <p class="text-primary-emphasis mb-0"><strong>Hora Extra:</strong> @FormatTimeSpan(detalheDia.HorasExtra)</p>
                            }
                        }
                        else if (detalheDia.Status == "Falta Justificada")
                        {
                            <p><strong>Justificativa:</strong> @detalheDia.Justificativa</p>
                        }
                        else if (detalheDia.Status == "Férias")
                        {
                            <p class="text-muted">Funcionário em período de férias.</p>
                        }
                        else
                        {
                            <p class="text-muted">Nenhum detalhe para este dia.</p>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>