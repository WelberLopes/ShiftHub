@model WebRegistro.ViewModels.RelatorioMensalViewModel
@{
    ViewData["Title"] = "Relatório Individual";
    Layout = "_Layout";

    string FormatTimeSpan(TimeSpan ts)
    {
        return $"{(int)ts.TotalHours:D2}:{ts.Minutes:D2}";
    }
}

<style>
    /* Estilos para a tela permanecem os mesmos */
    .table-sm th, .table-sm td {
        padding: 0.2rem;
    }

    /* ================================================= */
    /* ESTILOS APLICADOS SOMENTE NA IMPRESSÃO (CORRIGIDO) */
    /* ================================================= */
    @@media print {
        body * {
            visibility: hidden;
        }

        .print-area, .print-area * {
            visibility: visible;
        }

        .print-area {
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
            font-size: 9.5pt; /* Reduz o tamanho da fonte geral */
        }

        .no-print {
            display: none !important;
        }

        .card {
            box-shadow: none !important;
            border: none !important;
        }
        /* Otimizações de espaçamento para caber mais conteúdo */
        .print-area .my-3 {
            margin-top: 0.5rem !important;
            margin-bottom: 0.5rem !important;
        }

        .print-area .mb-3 {
            margin-bottom: 0.5rem !important;
        }

        .print-area .mb-4 {
            margin-bottom: 1rem !important;
        }

        .table-sm th, .table-sm td {
            padding: 0.1rem 0.2rem; /* Reduz o padding das células */
            vertical-align: middle;
        }

        .table > :not(caption) > * > * {
            background-color: transparent !important;
            color: #000 !important;
            box-shadow: none !important;
        }
        /* Garante que a assinatura apareça no final do fluxo do documento */
        .print-footer {
            margin-top: 3rem; /* Espaçamento acima da assinatura */
            text-align: center;
            page-break-inside: avoid; /* Tenta evitar que a assinatura quebre entre páginas */
        }
    }

    @@page {
        size: A4 portrait;
        margin: 1cm; /* Margens menores para mais espaço útil */
    }
</style>

<div class="card shadow-sm border-0" style="margin-top: 20px;">
    <div class="card-body p-lg-5">
        <div class="no-print mb-4 d-flex justify-content-between align-items-center">
            <form asp-controller="Admin" asp-action="Relatorio" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="cpf" value="@Model.Funcionario.Cpf" />
                <div class="d-flex align-items-end">
                    <div class="me-2">
                        <label for="competencia" class="form-label mb-0"><strong>Filtrar Competência</strong></label>
                        <input type="month" id="competencia" name="competencia" class="form-control" value="@Model.Competencia.ToString("yyyy-MM")">
                    </div>
                    <div>
                        <button type="submit" class="btn btn-secondary">Gerar</button>
                    </div>
                </div>
            </form>
            <div>
                <a asp-controller="Admin" asp-action="Index" class="btn btn-sm btn-outline-secondary"><i class="bi bi-arrow-left me-2"></i>Voltar</a>
                <button onclick="window.print()" class="btn btn-sm btn-primary"><i class="bi bi-printer-fill me-1"></i>Imprimir</button>
            </div>
        </div>

        <div class="print-area" id="report-content">
            <header class="position-relative border-bottom pb-1 mb-3">
                <img src="/img/logoGastroSemTexto.png" alt="Logo" style="height: 40px; position: absolute; left: 0; top: 50%; transform: translateY(-50%);">
                <div class="text-center">
                    <h6 class="fw-semibold mb-0 text-nowrap">
                        ShifHub Soluções LTDA
                    </h6>
                    <h6 class="mb-0 text-muted fw-normal">
                        CNPJ: 12.345.678/0001-99
                    </h6>
                </div>
            </header>
            <div>
                <h6 class="text-center my-3">Espelho de Ponto</h6>
            </div>

            <table class="table table-sm table-bordered mb-4">
                <tbody>
                    <tr>
                        <th style="width: 15%;">Funcionário:</th>
                        <td>@Model.Funcionario.NomeCompleto</td>
                        <th style="width: 15%;">CPF:</th>
                        <td>@Model.Funcionario.Cpf</td>
                    </tr>
                    <tr>
                        <th style="width: 15%;">Cargo:</th>
                        <td>@Model.Funcionario.Cargo</td>
                        <th style="width: 15%;">Data de Admissão:</th>
                        <td>@Model.Funcionario.DataAdmissao.ToString("dd/MM/yyyy")</td>
                    </tr>
                    <tr>
                        <th>Competência:</th>
                        <td colspan="1">@Model.Competencia.ToString("MMMM / yyyy").ToUpper()</td>
                        <th style="width: 15%;">Data de Emissão:</th>
                        <td colspan="1" class="text-start">@DateTime.Now.ToString("dd/MM/yyyy")</td>
                    </tr>
                </tbody>
            </table>

            <div class="table-responsive">
                <table class="table table-bordered table-striped align-middle text-center table-sm">
                    <thead class="table-light">
                        <tr>
                            <th>Dia</th>
                            <th>Entrada</th>
                            <th>Saída Almoço</th>
                            <th>Volta Almoço</th>
                            <th>Saída</th>
                            <th>Horas Dia</th>
                            <th class="no-print">Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 1; i <= DateTime.DaysInMonth(Model.Competencia.Year, Model.Competencia.Month); i++)
                        {
                            var dia = new DateTime(Model.Competencia.Year, Model.Competencia.Month, i);
                            if (Model.RegistrosAgrupadosPorDia.TryGetValue(i, out var registrosDoDia) && registrosDoDia.Any())
                            {
                                var registroPrincipal = registrosDoDia.First();
                                if (registroPrincipal.Tipo == "Falta Justificada")
                                {
                                    <tr class="table-info">
                                        <td>@dia.ToString("dd/MM") (@dia.ToString("ddd"))</td>
                                        <td colspan="5" class="text-start ps-2">
                                            <strong>Falta Justificada:</strong> @registroPrincipal.Justificativa
                                        </td>
                                        <td class="no-print"></td>
                                    </tr>
                                }
                                else if (registroPrincipal.Tipo == "Férias")
                                {
                                    <tr class="table-warning">
                                        <td>@dia.ToString("dd/MM") (@dia.ToString("ddd"))</td>
                                        <td colspan="5" class="text-start ps-2">
                                            <strong>Férias:</strong> @registroPrincipal.Justificativa
                                        </td>
                                        <td class="no-print"></td>
                                    </tr>
                                }
                             
                                else
                                {
                                    var entrada = registrosDoDia.FirstOrDefault(r => r.Tipo == "Entrada");
                                    var saidaAlmoco = registrosDoDia.FirstOrDefault(r => r.Tipo == "Saída Almoço");
                                    var voltaAlmoco = registrosDoDia.FirstOrDefault(r => r.Tipo == "Volta Almoço");
                                    var saida = registrosDoDia.FirstOrDefault(r => r.Tipo == "Saída");
                                    var horasDia = saida?.HorasTrabalhadasDia ?? TimeSpan.Zero;
                                    <tr>
                                        <td>@dia.ToString("dd/MM") (@dia.ToString("ddd"))</td>
                                        <td>@(entrada?.Horario.ToString("HH:mm") ?? "--:--")</td>
                                        <td>@(saidaAlmoco?.Horario.ToString("HH:mm") ?? "--:--")</td>
                                        <td>@(voltaAlmoco?.Horario.ToString("HH:mm") ?? "--:--")</td>
                                        <td>@(saida?.Horario.ToString("HH:mm") ?? "--:--")</td>
                                        <td class="fw-bold">@(FormatTimeSpan(horasDia))</td>
                                        <td class="no-print">
                                            <button type="button" class="btn btn-sm btn-outline-primary py-0 btn-ajustar"
                                                    data-bs-toggle="modal" data-bs-target="#ajustarHorarioModal"
                                                    data-dia="@i" data-entrada="@(entrada?.Horario.ToString("HH:mm"))"
                                                    data-saida-almoco="@(saidaAlmoco?.Horario.ToString("HH:mm"))"
                                                    data-volta-almoco="@(voltaAlmoco?.Horario.ToString("HH:mm"))"
                                                    data-saida="@(saida?.Horario.ToString("HH:mm"))">
                                                Ajustar
                                            </button>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                var ehDomingo = dia.DayOfWeek == DayOfWeek.Sunday;
                                <tr class="@(ehDomingo ? "table-secondary" : "")">
                                    <td>@dia.ToString("dd/MM") (@dia.ToString("ddd"))</td>
                                    @if (ehDomingo)
                                    {
                                        <td colspan="5" class="text-muted">Domingo</td>
                                    }
                                    else
                                    {
                                        <td colspan="5">
                                            <button type="button" class="btn btn-sm btn-outline-warning no-print py-0"
                                                    data-bs-toggle="modal" data-bs-target="#justificarFaltaModal"
                                                    data-data-falta="@dia.ToString("yyyy-MM-dd")">
                                                Justificar
                                            </button>
                                        </td>
                                    }
                                    <td class="no-print"></td>
                                </tr>
                            }
                        }
                    </tbody>
                    <tfoot class="table-group-divider">
                        <tr>
                            <td colspan="5" class="text-end fw-bold">Total de Horas Trabalhadas na Competência:</td>
                            <td class="fw-bolder fs-5">@FormatTimeSpan(Model.TotalHorasTrabalhadas)</td>
                            <td class="no-print"></td>
                        </tr>
                    </tfoot>
                </table>
            </div>

            <div class="print-footer">
                <div style="display: inline-block; text-align: center;">
                    <p style="margin-bottom: 30px;">_________________________________________</p>
                    <p class="mb-0">Assinatura do Funcionário(a)</p>
                    <p>@Model.Funcionario.NomeCompleto</p>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade no-print" id="justificarFaltaModal" tabindex="-1" aria-labelledby="justificarFaltaModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="justificarFaltaModalLabel">Justificar Falta</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
            </div>
             <input type="hidden" name="cpf" value="@Model.Funcionario.Cpf" />
            <form id="formJustificarFalta" asp-controller="Admin" asp-action="JustificarFalta" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="cpf" value="@Model.Funcionario.Cpf" />
                <div class="modal-body">
                    <input type="hidden" name="cpf" value="@Model.Funcionario.Cpf" />
                    <input type="hidden" name="dataFalta" id="modalDataFalta" />
                    <div class="mb-3">
                        <label for="justificativa" class="form-label">Motivo da Ausência:</label>
                        <textarea class="form-control" id="justificativa" name="justificativa" rows="3" required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary" form="formJustificarFalta">Salvar Justificativa</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade no-print" id="ajustarHorarioModal" tabindex="-1" aria-labelledby="ajustarHorarioModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ajustarHorarioModalLabel">Ajustar Horários</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
            </div>
            <form id="ajusteHorarioForm">
                <div class="modal-body">
                    <input type="hidden" id="ajusteCpf" value="@Model.Funcionario.Cpf" />
                    <input type="hidden" id="ajusteCompetencia" value="@Model.Competencia.ToString("yyyy-MM")" />
                    <input type="hidden" id="ajusteDia" />

                    <div class="row g-3">
                        <div class="col-md-6">
                            <label for="ajusteEntrada" class="form-label">Entrada</label>
                            <input type="time" class="form-control" id="ajusteEntrada">
                        </div>
                        <div class="col-md-6">
                            <label for="ajusteSaida" class="form-label">Saída</label>
                            <input type="time" class="form-control" id="ajusteSaida">
                        </div>
                        <div class="col-md-6">
                            <label for="ajusteSaidaAlmoco" class="form-label">Saída Almoço</label>
                            <input type="time" class="form-control" id="ajusteSaidaAlmoco">
                        </div>
                        <div class="col-md-6">
                            <label for="ajusteVoltaAlmoco" class="form-label">Volta Almoço</label>
                            <input type="time" class="form-control" id="ajusteVoltaAlmoco">
                        </div>
                    </div>

                    <div class="mt-3">
                        <label for="ajusteMotivo" class="form-label">Motivo do Ajuste</label>
                        <textarea class="form-control" id="ajusteMotivo" rows="3" required placeholder="Ex: Correção de esquecimento de batida."></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Salvar Ajustes</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>

        document.addEventListener('DOMContentLoaded', function () {
            // Lógica para o Modal de Justificativa
            const justifyModal = document.getElementById('justificarFaltaModal');
            if (justifyModal) {
                justifyModal.addEventListener('show.bs.modal', function (event) {
                    const button = event.relatedTarget;
                    const dataFalta = button.getAttribute('data-data-falta');
                    const modalDataFaltaInput = justifyModal.querySelector('#modalDataFalta');
                    modalDataFaltaInput.value = dataFalta;
                });
            }

            // Lógica para o Modal de Ajuste
            const ajustarModal = document.getElementById('ajustarHorarioModal');
            if (ajustarModal) {
                ajustarModal.addEventListener('show.bs.modal', function (event) {
                    const button = event.relatedTarget;
                    const dia = button.getAttribute('data-dia');
                    const entrada = button.getAttribute('data-entrada');
                    const saidaAlmoco = button.getAttribute('data-saida-almoco');
                    const voltaAlmoco = button.getAttribute('data-volta-almoco');
                    const saida = button.getAttribute('data-saida');

                    ajustarModal.querySelector('#ajusteDia').value = dia;
                    ajustarModal.querySelector('#ajusteEntrada').value = entrada;
                    ajustarModal.querySelector('#ajusteSaidaAlmoco').value = saidaAlmoco;
                    ajustarModal.querySelector('#ajusteVoltaAlmoco').value = voltaAlmoco;
                    ajustarModal.querySelector('#ajusteSaida').value = saida;
                    ajustarModal.querySelector('#ajustarHorarioModalLabel').textContent = `Ajustar Horários - Dia ${dia}`;
                    ajustarModal.querySelector('#ajusteMotivo').value = '';
                });
            }

            const ajusteForm = document.getElementById('ajusteHorarioForm');
            if (ajusteForm) {
                ajusteForm.addEventListener('submit', function (event) {
                    event.preventDefault();

                    const dadosAjuste = {
                        dia: parseInt(document.getElementById('ajusteDia').value),
                        cpf: document.getElementById('ajusteCpf').value,
                        competencia: document.getElementById('ajusteCompetencia').value,
                        entrada: document.getElementById('ajusteEntrada').value || null,
                        saidaAlmoco: document.getElementById('ajusteSaidaAlmoco').value || null,
                        voltaAlmoco: document.getElementById('ajusteVoltaAlmoco').value || null,
                        saida: document.getElementById('ajusteSaida').value || null,
                        motivo: document.getElementById('ajusteMotivo').value
                    };

                    const antiForgeryToken = document.querySelector('input[name="__RequestVerificationToken"]')?.value;

                    fetch('@Url.Action("AjustarHorario", "Admin")', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            ...(antiForgeryToken && { 'RequestVerificationToken': antiForgeryToken })
                        },
                        body: JSON.stringify(dadosAjuste)
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert(data.message || 'Horários ajustados com sucesso!');
                            location.reload();
                        } else {
                            alert('Erro: ' + (data.message || 'Não foi possível salvar os ajustes.'));
                        }
                    })
                    .catch(error => {
                        console.error('Erro na requisição fetch:', error);
                        alert('Ocorreu um erro de comunicação com o servidor.');
                    });
                });
            }
        });
    </script>
}